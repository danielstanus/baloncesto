name: CI

on:
  push:

jobs:
  build:
    runs-on: self-hosted
    steps:
      - name: Descargar repositorio
        uses: actions/checkout@v3
      - name: Instalar aplicación en Tomcat
        run: |
          mvn package -DskipTests=true
          cp -r target/Baloncesto /usr/local/tomcat/webapps
      - name: Preparar base de datos de prueba
        run: mysql -u root < db/baloncesto.sql
      - name: Preparar ficheros de configuracion y tomcat
      - shell: bash
        run: |
          chmod +x vars/env_vars.sh
          sh vars/env_vars.sh

          sh /_work/baloncesto/baloncesto/vars/env_vars.sh 

          sh /usr/local/tomcat/bin/catalina.sh stop
          sh /usr/local/tomcat/bin/catalina.sh start
      - name: realizar pruebas unitarias
        run: mvn test
      - name: realizar pruebas funcionales
        run: mvn failsafe:integration-test
      
  test: 
    needs: build 
    runs-on: self-hosted 
    steps: 
      - name: pruebas-funcionales 
        run: echo "pruebas-funcionales" 
   
  qa: 
    needs: test 
    runs-on: self-hosted 
    continue-on-error: true 
    steps: 
      - name: calidad-codigo 
        run: | 
          mvn sonar:sonar -Dsonar.host.url=http://sonarqube:9000 -Dsonar.qualitygate.wait=true -Dsonar.login=admin -Dsonar.password=admin
  
  stage: 
    needs: qa 
    runs-on: ubuntu-latest 
    continue-on-error: true 
    if: github.ref == 'refs/heads/master' 
    steps: 
      - name: Descargar repositorio 
        uses: actions/checkout@v3 
      - name: Crear el archivo .war 
        run: | 
          mvn package -DskipTests=true 
      - name: Desplegar en Azure PreProducción
        uses: Azure/webapps-deploy@v2 
        with: 
          app-name: baloncesto-pre-stanus 
          publish-profile: ${{ secrets.AZURE_WEBAPP_PRE_PUBLISH_PROFILE }} 
          package: target/*.war 

  deploy: 
    needs: stage 
    runs-on: ubuntu-latest 
    if: github.ref == 'refs/heads/master' 
    steps: 
      - name: Descargar repositorio 
        uses: actions/checkout@v3 
      - name: Crear el archivo .war 
        run: | 
          mvn package -DskipTests=true 
      - name: Aprobación manual 
        uses: trstringer/manual-approval@v1 
        with: 
          secret: ${{ secrets.TOKEN }} 
          approvers: danielstanus 
      - name: Desplegar en Azure 
        uses: Azure/webapps-deploy@v2 
        with: 
          app-name: baloncesto-stanus 
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }} 
          package: target/*.war   